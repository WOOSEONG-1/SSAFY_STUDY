** 객체 지향 설계 5대 원칙 ( https://limkydev.tistory.com/77 )
	1. SRP (Single Responsibility Principle) 	: 단일 책임 원칙
		- 하나의 클래스는 관련된 역할과 책임만을 가져야한다.
	2. OCP (Open Closed Principle) 				: 개방 폐쇄 원칙
		- 확장에는 열려 있고, 변화(수정)에는 닫혀있어야한다.		
		- 드론 연동 프로그램 -> A사 드론		- - - > 중간에 인터페이스를
		- 드론 연동 프로그램 -> B사 드론 		- - - > 두어서 관리하기
	3. LSP (Liskov Substitution Principle) 		: 리스코프 치환 원칙
		- 하위 클래스(자식 or 인터페이스)는 상위 클래스(부모)를 대체할 수 있어야한다.
		- 상위 클래스와 하위 클래스간 논리적인 오류가 없어야함
		- 아버지 -> 아들 ===> 부적절한 상속 ( 아들은 아버지와 한 종류가 아님 )
		- 포유류 -> 고래 ===> 적절한 상속 
	4. ISP (Interface Segregation Principle) 	: 인터페이스 분리 원칙
		- SRP는 너무 많은 책임이 주어지면 클래스를 쪼개서 관리함.
		- ISP는 클래스는 그대로 두되, 역할들을 인터페이스로 쪼개서 Implemnets해서 관리
	5. DIP (Dependency Inversion Principle) 	: 의존 역전 원칙
		- 자신보다 변하기 쉬운 것에 의존하지 않는다.
		- 추상 or 상위 클래스는 하위 클래스에 의존적이면 안됨.
		- Ex) 벤츠 -> 스노우 타이어 : 벤츠는 스노우 타이어에 의존적임. 
									: 하지만 타이어는 계절마다 바뀌므로 수정이 필요함.
			  벤츠 -> Interface : 타이어 	<- 스노우 타이어
											<- 일반 타이어
											<- 광폭 타이어
			
	